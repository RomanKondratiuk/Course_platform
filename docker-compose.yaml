version: '3.8'

services:

  redis:
    image: redis
    ports:
      - '6379:6379'
    networks:
      - myNet

  db:
    image: postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: ${POSTGRES_HOST_AUTH_METHOD}
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - '5435:5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - myNet

  app:
    build: .
    tty: true
    restart: unless-stopped
    command: python manage.py runserver 0.0.0.0:8000
    depends_on:
      - db
    networks:
      - myNet

  celery:
    build: .
    tty: true
    command: celery -A config worker -l INFO
    depends_on:
      - db
      - redis
      - app




    volumes:
      - .:/code
#    depends_on:
#      db:
#        condition: service_healthy
    ports:
      - '8001:8000'
    networks:
      - myNet

networks:
  myNet:
    driver: bridge

volumes:
  pg_data:
